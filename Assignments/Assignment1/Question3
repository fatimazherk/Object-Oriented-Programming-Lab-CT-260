// Imagine you are hired by an agency to encode the message comprising of digits. Your task
// is to write a 'C++-program' that would work on any generic input. The key factors of the
// encoding scheme are listed below:
// a) Each digit in the input would be considered in the range 1-9 only.
// b) Each digit in the input would occur only once.
// c) If the input number has an even number of digits, then the encoding message would
// contain the maximum number from input as its first digit and the minimum number from
// input as itssecond digit.
// d) If the input number has an odd number of digits, then the encoding message would
// contain the minimum number from input as its first digit and the maximum number from
// input as its second digit.

#include <iostream>
using namespace std;

int main() {
    string input;
    char min_digit = '9', max_digit = '0'; // Initialize minimum digit with maximum possible digit,
	// and maximum digit with minimum possible digit

    cout << "Enter a number: ";
    cin >> input; //taking input 

    // Finding the smallest and largest digit in our input
    for (size_t i = 0; i < input.length(); ++i) {
        char digit = input[i];
        if (digit >= '0' && digit <= '9') { // Checking if input is only a digit and 
        //not an alphabet or special symbol
            if (digit < min_digit) min_digit = digit;
            if (digit > max_digit) max_digit = digit;
        }
    }

    // Encode the message based on the length of the input
    string encoded_message;
    if (input.length() % 2 == 0) {
        encoded_message = string(1, max_digit) + min_digit;
    } else {
        encoded_message = string(1, min_digit) + max_digit;
    }

    cout << "Encoded message: " << encoded_message << endl;
    //output of message encoded 
    return 0;
}
